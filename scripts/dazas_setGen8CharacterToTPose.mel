//Set Genesis 8 Character From Bind Pose to T-Pose.
//Go to Bind Pose then run this script.
global proc dazas_setGen8CharacterToTPose()
{
  global string $gDazasNameSpace;
  GoToBindPose;
  string $NS;
  if ($gDazasNameSpace=="")
  {
    $NS = dazas_nameSpaceDetect(1);
  }
  else
  {
    $NS = $gDazasNameSpace+":";
  }

  string $charObj[] = ls("-sl", "-tr");
  if (size(listRelatives("-s", "-typ", "mesh", $charObj)) == 0)
  {
    string $message =
      "In order to determine the position and angle of the foot, "+
      "the Genesis 8 character mesh needs to be selected.\n"+
      "Continuing without selecting the mesh will not ensure that "+
      "the foot is horizontal and that the bottom of the foot is in the Y=0 plane.\n "+
      "Are you sure?";

    string $yesOrNot = confirmDialog("-t","Warning:", "-m",$message, "-b","Yes", "-b","No", "-db","Yes", "-cb","No", "-ds","No");
    if ($yesOrNot=="No")
      return;
  }

  string $OriginLct[] = spaceLocator();
  string $xdirLct[] = spaceLocator();
  setAttr($xdirLct[0]+".t",1,0,0);
  string $ydirLct[] = spaceLocator();
  setAttr($ydirLct[0]+".t",0,1,0);
  string $nydirLct[] = spaceLocator();
  setAttr($nydirLct[0]+".t",0,-1,0);
  string $zdirLct[] = spaceLocator();
  setAttr($zdirLct[0]+".t",0,0,1);
  string $nzdirLct[] = spaceLocator();
  setAttr($nzdirLct[0]+".t",0,0,-1);

  // spine
  string $spineObjs[] = {"hip", "pelvis", "abdomenLower", "abdomenUpper",
            "chestLower", "chestUpper", "neckLower", "neckUpper", "head"};
  for ($obj in $spineObjs)
  {
    setAttr($NS+$obj+".tx", 0);
  }

  string $headFrontLct[] = spaceLocator();
  float $headPos[] = xform("-q", "-t", "-ws", $NS+"head");
  setAttr($headFrontLct[0]+".t",$headPos[0],$headPos[1],$headPos[2]+1);
  parent($headFrontLct[0], $NS+"head");

  dazas_orientAimMatch ("-fromOriginObject "+$NS+"abdomenUpper \
                         -fromAimObject    "+$NS+"chestLower \
                         -fromUpVector     0 0 1 \
                         -toOriginObject   "+$OriginLct[0]+" \
                         -toAimObject      "+$ydirLct[0]);

  dazas_orientAimMatch ("-fromOriginObject "+$NS+"chestLower \
                         -fromAimObject    "+$NS+"neckLower \
                         -fromUpVector     0 0 1 \
                         -toOriginObject   "+$OriginLct[0]+" \
                         -toAimObject      "+$ydirLct[0]);

  dazas_orientAimMatch ("-fromOriginObject "+$NS+"head \
                         -fromAimObject    "+$headFrontLct[0]+" \
                         -fromUpVector     0 1 0 \
                         -toOriginObject   "+$OriginLct[0]+" \
                         -toAimObject      "+$zdirLct[0]+" \
                         -matchObject      "+$NS+"neckLower");
  delete($headFrontLct[0]);

  // arm
  dazas_straighten3HierarchicalJoints ("-originObject "+$NS+"lForearmTwist \
                                        -upperLevelObject "+$NS+"lForearmBend \
                                        -lowerLevelObject "+$NS+"lHand");

  dazas_straighten3HierarchicalJoints ("-originObject "+$NS+"lShldrTwist \
                                        -upperLevelObject "+$NS+"lShldrBend \
                                        -lowerLevelObject "+$NS+"lForearmBend");

  dazas_orientAimMatch ("-fromOriginObject "+$NS+"lCollar \
                         -fromAimObject    "+$NS+"lShldrBend \
                         -fromUpVector     0 1 0 \
                         -toOriginObject   "+$OriginLct[0]+" \
                         -toAimObject      "+$xdirLct[0]);

  dazas_orientAimMatch ("-fromOriginObject "+$NS+"lShldrBend \
                         -fromAimObject    "+$NS+"lHand \
                         -fromUpObject     "+$NS+"lForearmBend \
                         -fromUpVector     0 1 0 \
                         -toOriginObject   "+$OriginLct[0]+" \
                         -toAimObject      "+$xdirLct[0]+" \
                         -toUpObject       "+$nzdirLct[0]);

  dazas_orientAimMatch ("-fromOriginObject "+$NS+"lShldrBend \
                         -fromAimObject    "+$NS+"lForearmBend \
                         -fromUpVector     0 1 0 \
                         -toOriginObject   "+$OriginLct[0]+" \
                         -toAimObject      "+$xdirLct[0]);

  dazas_orientAimMatch ("-fromOriginObject "+$NS+"lForearmBend \
                         -fromAimObject    "+$NS+"lHand \
                         -fromUpVector     0 1 0 \
                         -toOriginObject   "+$OriginLct[0]+" \
                         -toAimObject      "+$xdirLct[0]);

  rotate("-r", "-ws", "-fo", 0,-2,0, $NS+"lForearmBend");

  dazas_orientAimMatch ("-fromOriginObject "+$NS+"lShldrBend \
                         -fromAimObject    "+$NS+"lHand \
                         -fromUpObject     "+$NS+"lForearmBend \
                         -fromUpVector     0 1 0 \
                         -toOriginObject   "+$OriginLct[0]+" \
                         -toAimObject      "+$xdirLct[0]+" \
                         -toUpObject       "+$nzdirLct[0]);

  dazas_orientAimMatch ("-fromOriginObject "+$NS+"lCarpal2 \
                         -fromAimObject    "+$NS+"lMid4 \
                         -fromUpObject     "+$NS+"lCarpal4 \
                         -fromUpVector     0 1 0 \
                         -toOriginObject   "+$OriginLct[0]+" \
                         -toAimObject      "+$xdirLct[0]+" \
                         -toUpObject       "+$nzdirLct[0]+" \
                         -matchObject      "+$NS+"lHand");

  // leg
  dazas_straighten3HierarchicalJoints ("-originObject "+$NS+"lThighTwist \
                                        -upperLevelObject "+$NS+"lThighBend \
                                        -lowerLevelObject "+$NS+"lShin");

  dazas_straighten3HierarchicalJoints ("-originObject "+$NS+"lShin \
                                        -upperLevelObject "+$NS+"lThighTwist \
                                        -lowerLevelObject "+$NS+"lFoot");

  rotate -r -os -fo 2 0 0 ($NS+"lShin");

  string $lThighBendFrontLctA[] = spaceLocator();
  float $lThighBendPos[] = xform("-q", "-t", "-ws", $NS+"lThighBend");
  xform("-ws", "-t",$lThighBendPos[0],$lThighBendPos[1],$lThighBendPos[2]+10, $lThighBendFrontLctA[0]);
  parent($lThighBendFrontLctA[0], $NS+"lThighBend");

  dazas_orientAimMatch ("-fromOriginObject "+$NS+"lThighBend \
                         -fromAimObject    "+$NS+"lFoot \
                         -fromUpObject     "+$NS+"lShin \
                         -fromUpVector     0 1 0 \
                         -toOriginObject   "+$OriginLct[0]+" \
                         -toAimObject      "+$nydirLct[0]+" \
                         -toUpObject       "+$zdirLct[0]);

  dazas_orientAimMatch ("-fromOriginObject "+$NS+"lThighBend \
                         -fromAimObject    "+$NS+"lShin \
                         -fromUpVector     0 0 1 \
                         -toOriginObject   "+$OriginLct[0]+" \
                         -toAimObject      "+$nydirLct[0]);

  parent -w $lThighBendFrontLctA[0];

  string $lThighBendFrontLctB[] = spaceLocator();
  $lThighBendPos = xform("-q", "-t", "-ws", $NS+"lThighBend");
  xform("-ws", "-t",$lThighBendPos[0],$lThighBendPos[1],$lThighBendPos[2]+10, $lThighBendFrontLctB[0]);
  setAttr($lThighBendFrontLctA[0]+".ty", getAttr($lThighBendFrontLctB[0]+".ty"));

  float $angle = dazas_threeObjectsAngle ("-originObject          "+$NS+"lThighBend \
                                          -vectorObjectA          "+$lThighBendFrontLctA[0]+" \
                                          -vectorObjectB          "+$lThighBendFrontLctB[0]+" \
                                          -referenceAxisObj       "+$OriginLct[0]+" \
                                          -referenceAxisDirection 0 1 0");

  rotate -r -ws -fo 0 (0.5*$angle) 0 ($NS+"lThighBend");
  rotate -r -ws -fo 0 (-0.5*$angle) 0 ($NS+"lThighTwist");

  delete($lThighBendFrontLctB, $lThighBendFrontLctA);

  dazas_orientAimMatch ("-fromOriginObject "+$NS+"lThighBend \
                         -fromAimObject    "+$NS+"lFoot \
                         -fromUpObject     "+$NS+"lShin \
                         -fromUpVector     0 1 0 \
                         -toOriginObject   "+$OriginLct[0]+" \
                         -toAimObject      "+$nydirLct[0]+" \
                         -toUpObject       "+$zdirLct[0]);

  // feet
  dazas_orientAimMatch ("-fromOriginObject "+$NS+"lToe \
                         -fromAimObject    "+$NS+"lSmallToe4 \
                         -fromUpVector     0 1 0 \
                         -toOriginObject   "+$OriginLct[0]+" \
                         -toAimObject      "+$xdirLct[0]+" \
                         -matchObject      "+$NS+"lFoot");

  string $lFootFrontLct[] = spaceLocator();
  float $lFootPos[] = xform("-q", "-t", "-ws", $NS+"lFoot");
  float $lToePos[] = xform("-q", "-t", "-ws", $NS+"lToe");
  setAttr($lFootFrontLct[0]+".t",$lToePos[0],$lFootPos[1],$lToePos[2]);

  dazas_orientAimMatch ("-fromOriginObject "+$NS+"lFoot \
                         -fromAimObject    "+$lFootFrontLct[0]+" \
                         -fromUpVector     0 1 0 \
                         -toOriginObject   "+$OriginLct[0]+" \
                         -toAimObject      "+$zdirLct[0]);
  delete($lFootFrontLct[0]);

  if (size($charObj))
  {
    string $lFootOriginLct[] = spaceLocator();
    float  $lFootOriginPos[] = pointPosition("-w", $charObj[0]+".vtx[4462]");
    setAttr($lFootOriginLct[0]+".t",$lFootOriginPos[0],$lFootOriginPos[1],$lFootOriginPos[2]);
    string $lFootAimLct[] = spaceLocator();
    float  $lFootAimPos[] = pointPosition("-w", $charObj[0]+".vtx[2079]");
    setAttr($lFootAimLct[0]+".t",$lFootOriginPos[0],$lFootAimPos[1],$lFootAimPos[2]);

    dazas_orientAimMatch ("-fromOriginObject "+$lFootOriginLct[0]+" \
                           -fromAimObject    "+$lFootAimLct[0]+" \
                           -fromUpVector     0 1 0 \
                           -toOriginObject   "+$OriginLct[0]+" \
                           -toAimObject      "+$zdirLct[0]+" \
                           -matchObject      "+$NS+"lFoot");
    delete($lFootAimLct, $lFootOriginLct);

    float $solesPos[] = pointPosition("-w", $charObj[0]+".vtx[4459]");
    move("-ws", "-r",0,-$solesPos[1],0, $NS+"hip");
  }
  else
  {
    warning("\nNo mesh of Genesis 8 Character is selected to determine the angle and location of the sole.");
  }

  dazas_dazJointsSymmetrical("-dir left_to_right -nameSpace "+$NS);

  delete($OriginLct[0], $xdirLct[0], $ydirLct[0], $nydirLct[0], $zdirLct[0], $nzdirLct[0]);
}
