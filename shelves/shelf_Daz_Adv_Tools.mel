global proc shelf_Daz_Adv_Tools () {
    global string $gBuffStr;
    global string $gBuffStr0;
    global string $gBuffStr1;


    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 64
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Daz To AdvancedSkeleton Guide" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "Daz To AdvancedSkeleton Guide" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -imageOverlayLabel "Guide" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "render.png" 
        -image1 "render.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "source \"/Users/chrissu/Documents/GitHub/Maya_Daz_Adv_Tools_Shelf/scripts/dazToAdvancedSkeletonGuide.mel\";\n" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 64
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Select Very First Original Mesh Nodes." 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "Select Very First Original Nodes" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -imageOverlayLabel "OrigM" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "filtersOn.png" 
        -image1 "filtersOn.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "// Select Very First Original Mesh Nodes.\n{\n    // List Mesh Upstream Geometry Nodes.\n    proc string[] listUpstream(string $startNode, string $passedNodes[], int $depth, int $maxDepth)\n    {\n        string $plugs[];\n        if(nodeType($startNode) == \"mesh\")\n        {\n            $plugs[0] = $startNode+\".inMesh\";\n        }\n        else\n        {\n            string $plugName[] = listAttr(\"-a\", \"-m\", \"-st\", \"*inputGeometry*\", $startNode);\n            int $s = size($plugName);\n            for($i=0; $i<$s; $i++)\n            {\n                $plugs[$i] = $startNode+\".\"+$plugName[$i];\n            }\n        }\n\n        $sour = stringArrayRemove($passedNodes, stringArrayRemoveDuplicates(listConnections(\"-s\", 1, \"-d\", 0, \"-scn\", 1, \"-sh\", 1, $plugs)));\n        if( size($sour) > 0 )\n        {\n            $passedNodes = stringArrayCatenate($passedNodes, $sour);\n            if( $depth < $maxDepth )\n            {\n                for( $each in $sour )\n                {\n                    $passedNodes = listUpstream($each,$passedNodes,($depth+1),$maxDepth);\n                }\n            }\n        }\n        return $passedNodes;\n    }\n\n    string $selObjShape[] = listRelatives(\"-s\", \"-typ\", \"mesh\", ls(\"-sl\"));\n    string $upstreamNodes[] =  listUpstream($selObjShape[0], {$selObjShape[0]}, 0, 20);\n\n    int $s = size($upstreamNodes);\n    for($i=$s-1; $i>=0; $i--)\n    {\n        if(nodeType($upstreamNodes[$i]) == \"mesh\")\n        {\n            select -r $upstreamNodes[$i];\n            break;\n        }\n    }\n}" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Remove Daz Genesis 8 Charcator's Expression Control Joints.  Select imported Daz Genesis 8 Charcator run this script." 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "Remove Gen8 Charcator's Expression Joints" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -imageOverlayLabel "ReExpJ" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "removeSkinInfluence.png" 
        -image1 "removeSkinInfluence.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "// Remove Daz Genesis 8 Charcator's Expression Control Joints.\n// Select imported Daz Genesis 8 Charcator run this script.\n{\n    string $lockWeightsInfs[] = {\"neckUpper\", \"hip\", \"abdomenLower\", \"abdomenUpper\",\n        \"chestLower\", \"chestUpper\", \"lCollar\", \"lShldrBend\", \"lShldrTwist\", \"lForearmBend\",\n        \"lForearmTwist\", \"lHand\", \"lCarpal1\", \"lIndex1\", \"lIndex2\", \"lIndex3\", \"lCarpal2\",\n        \"lMid1\", \"lMid2\", \"lMid3\", \"lCarpal3\", \"lRing1\", \"lRing2\", \"lRing3\", \"lCarpal4\",\n        \"lPinky1\", \"lPinky2\", \"lPinky3\", \"lThumb1\", \"lThumb2\", \"lThumb3\",\"neckLower\",\n        \"rCollar\", \"rShldrBend\", \"rShldrTwist\", \"rForearmBend\", \"rForearmTwist\", \"rHand\",\n        \"rCarpal1\", \"rIndex1\", \"rIndex2\", \"rIndex3\", \"rCarpal2\", \"rMid1\", \"rMid2\", \"rMid3\",\n        \"rCarpal3\", \"rRing1\", \"rRing2\", \"rRing3\", \"rCarpal4\", \"rPinky1\", \"rPinky2\", \"rPinky3\",\n        \"rThumb1\", \"rThumb2\", \"rThumb3\", \"lPectoral\", \"rPectoral\", \"pelvis\", \"lThighBend\",\n        \"lThighTwist\", \"lShin\", \"lFoot\", \"lMetatarsals\", \"lToe\", \"lBigToe\", \"lBigToe_2\",\n        \"lSmallToe1\", \"lSmallToe1_2\", \"lSmallToe2\", \"lSmallToe2_2\", \"lSmallToe3\", \"lSmallToe3_2\",\n        \"lSmallToe4\", \"lSmallToe4_2\", \"rThighBend\", \"rThighTwist\", \"rShin\", \"rFoot\", \"rMetatarsals\",\n        \"rToe\", \"rBigToe\", \"rBigToe_2\", \"rSmallToe1\", \"rSmallToe1_2\", \"rSmallToe2\", \"rSmallToe2_2\",\n        \"rSmallToe3\", \"rSmallToe3_2\", \"rSmallToe4\", \"rSmallToe4_2\", \"lEar\", \"rEar\"};\n\n    for( $each in $lockWeightsInfs )\n        setAttr(($each+\".liw\"), 1);\n\n    string $removeInfs[] = {\n        \"upperTeeth\",\n        \"lowerJaw\",\n            \"lowerTeeth\", \"tongue01\", \"tongue02\", \"tongue03\", \"tongue04\",\n            \"lowerFaceRig\", \"lNasolabialLower\", \"rNasolabialLower\", \"lNasolabialMouthCorner\",\n                \"rNasolabialMouthCorner\", \"lLipCorner\", \"lLipLowerOuter\", \"lLipLowerInner\",\n                \"LipLowerMiddle\", \"rLipLowerInner\", \"rLipLowerOuter\", \"rLipCorner\", \"LipBelow\",\n                \"Chin\", \"lCheekLower\", \"rCheekLower\", \"BelowJaw\", \"lJawClench\", \"rJawClench\",\n        \"upperFaceRig\",\n            \"rBrowInner\", \"rBrowMid\", \"rBrowOuter\", \"lBrowInner\", \"lBrowMid\",\n            \"lBrowOuter\", \"CenterBrow\", \"MidNoseBridge\", \"lEyelidInner\", \"lEyelidUpperInner\",\n            \"lEyelidUpper\", \"lEyelidUpperOuter\", \"lEyelidOuter\", \"lEyelidLowerOuter\",\n            \"lEyelidLower\", \"lEyelidLowerInner\", \"rEyelidInner\", \"rEyelidUpperInner\",\n            \"rEyelidUpper\", \"rEyelidUpperOuter\", \"rEyelidOuter\", \"rEyelidLowerOuter\",\n            \"rEyelidLower\", \"rEyelidLowerInner\", \"lSquintInner\", \"lSquintOuter\", \"rSquintInner\",\n            \"rSquintOuter\", \"lCheekUpper\", \"rCheekUpper\", \"Nose\", \"lNostril\", \"rNostril\", \"lLipBelowNose\",\n            \"rLipBelowNose\", \"lLipNasolabialCrease\", \"rLipNasolabialCrease\", \"lNasolabialUpper\",\n            \"rNasolabialUpper\", \"lNasolabialMiddle\", \"rNasolabialMiddle\", \"LipUpperMiddle\",\n            \"lLipUpperOuter\", \"lLipUpperInner\", \"rLipUpperInner\", \"rLipUpperOuter\",\n        \"lEye\",\n        \"rEye\"};\n\n    string $selObjs[] = ls(\"-sl\");\n    string $skinCluster[] = listConnections(\"-t\", \"skinCluster\", listRelatives(\"-s\", \"-typ\", \"mesh\", $selObjs));\n    string $allInfs[]= skinCluster(\"-q\", \"-inf\", $skinCluster);\n\n    ConvertSelectionToVertices();\n    string $allVtx[] = ls(\"-sl\", \"-fl\");\n    select(\"-cl\");\n    for( $inf in $removeInfs )\n    {\n        string $infVtxs[];\n        for( $vtx in $allVtx)\n        {\n            if( skinPercent( \"-t\", $inf, \"-q\", $skinCluster[0], $vtx) > 0 )\n                $infVtxs[size($infVtxs)] = $vtx;\n        }\n        if( size($infVtxs) > 0 )\n        {\n            print(\"Moving '\"+$inf+\"' Weights to 'head'...\\n\");\n            skinPercent( \"-tmw\", $inf, \"-tmw\", \"head\", $skinCluster[0], $infVtxs);\n        }\n    }\n    select($selObjs);\n    RemoveUnusedInfluences();\n    select($removeInfs);\n    select(\"-d\", \"lowerJaw\", \"lEye\",\"rEye\");\n    print(\"All Done! The Genesis 8 expression control joints has been removed. You can now delete the selected influences.\");\n}\n" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Select Source Group and Destance Group run this script." 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "Connect Sources to Destances" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -imageOverlayLabel "Connect" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "menuIconConnect.png" 
        -image1 "menuIconConnect.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "// Connect the 'outMesh' plugs from Source Group's Mesh objects to the 'inMesh' plugs from Destance Group's Mesh objects.\n// Connected by hierarchical order.\n// Select Source Group and Destance Group run this script.\n{\n    // List Mesh Upstream Geometry Nodes.\n    proc string[] listUpstream(string $startNode, string $passedNodes[], int $depth, int $maxDepth)\n    {\n        string $plugs[];\n        if(nodeType($startNode) == \"mesh\")\n        {\n            $plugs[0] = $startNode+\".inMesh\";\n        }\n        else\n        {\n            string $plugName[] = listAttr(\"-a\", \"-m\", \"-st\", \"*inputGeometry*\", $startNode);\n            int $s = size($plugName);\n            for($i=0; $i<$s; $i++)\n            {\n                $plugs[$i] = $startNode+\".\"+$plugName[$i];\n            }\n        }\n\n        $sour = stringArrayRemove($passedNodes, stringArrayRemoveDuplicates(listConnections(\"-s\", 1, \"-d\", 0, \"-scn\", 1, \"-sh\", 1, $plugs)));\n        if( size($sour) > 0 )\n        {\n            $passedNodes = stringArrayCatenate($passedNodes, $sour);\n            if( $depth < $maxDepth )\n            {\n                for( $each in $sour )\n                {\n                    $passedNodes = listUpstream($each,$passedNodes,($depth+1),$maxDepth);\n                }\n            }\n        }\n        return $passedNodes;\n    }\n\n    // Find Very First Original Mesh Nodes.\n    proc string findOriginalMesh(string $mesh)\n    {\n        string $selObjShape[] = listRelatives(\"-s\", \"-typ\", \"mesh\", $mesh);\n        string $upstreamNodes[] =  listUpstream($selObjShape[0], {$selObjShape[0]}, 0, 20);\n\n        string $origMesh = $selObjShape[0];\n        int $s = size($upstreamNodes);\n        for($i=$s-1; $i>=0; $i--)\n        {\n            if(nodeType($upstreamNodes[$i]) == \"mesh\")\n            {\n                $origMesh = $upstreamNodes[$i];\n                break;\n            }\n        }\n        return $origMesh;\n    }\n\n    string $grps[] = ls(\"-sl\");\n    string $sour[] = listRelatives(\"-c\", $grps[0]);\n    string $dest[] = listRelatives(\"-c\", $grps[1]);\n\n    int $s = size($sour);\n    for($i=0; $i<$s; $i++)\n    {\n        string $sourShape[] = listRelatives(\"-s\", \"-typ\", \"mesh\", $sour[$i]);\n        string $destShape = findOriginalMesh($dest[$i]);\n\t\tif($sourShape[0] != $destShape)\n        \tconnectAttr(\"-f\", ($sourShape[0]+\".outMesh\"), ($destShape+\".inMesh\"));\n    }\n}\n" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 76
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Select Source Group and Destance Group run this script." 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "Disconnect Sources to Destances" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -imageOverlayLabel "Disconnect" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "NEX_cut.png" 
        -image1 "NEX_cut.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "// Disconnect the 'outMesh' plugs from Source Group's Mesh objects to the 'inMesh' plugs from Destance Group's Mesh objects.\n// Disconnected by hierarchical order.\n// Select Source Group and Destance Group run this script.\n\n{\n    string $grps[] = ls(\"-sl\");\n    string $sour[] = listRelatives(\"-c\", $grps[0]);\n    string $dest[] = listRelatives(\"-c\", $grps[1]);\n    string $sourShapes[];\n    string $destShapes[];\n    \n    int $s = size($sour);\n    for($i=0; $i<$s; $i++)\n    {\n        $sourShapes = listRelatives(\"-s\", \"-typ\", \"mesh\", $sour[$i]);\n        $destShapes = listRelatives(\"-s\", \"-typ\", \"mesh\", $dest[$i]);\n\n        for($eachSour in $sourShapes)\n        {\n            for($eachDest in $destShapes)\n            {\n                string $so = $eachSour + \".outMesh\";\n                string $de = $eachDest + \".inMesh\";\n                if( isConnected(\"-iuc\", $so, $de) )\n                {\n                    disconnectAttr($so, $de);\n\t\t\t\t\tbreak;\n                }\n            }\n        }\n    }\n}" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Copies an already set AdvancedSkeleton Face Pre setting from an already bound Character." 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "Copy AdvancedSkeleton Face Pre Setting" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -imageOverlayLabel "FacePre" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "BasicHead.png" 
        -image1 "BasicHead.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "// Copies an already set AdvancedSkeleton Face Pre setting from an already bound Character.\n{\n    global proc string advasFacePreSettingCmd()\n    {\n        string $cmds[]={\"// AdvancedSkeleton Face Pre Cmds.\\n\"};\n        string $cmd;\n        string $selObjs[];\n        string $textFields[] = {\"asFaceMaskTextField\",\n                                \"asFaceFaceTextField\",\n                                \"asFaceAllHeadTextField\",\n                                \"asFaceRightEyeTextField\",\n                                \"asFaceLeftEyeTextField\",\n                                \"asFaceUpperTeethTextField\",\n                                \"asFaceLowerTeethTextField\",\n                                \"asFaceTongueTextField\",\n                                \"asFaceEyebrowTextField\",\n                                \"asFaceEyelashTextField\",\n                                \"asFaceExtrasTextField\"};\n\n        for($txField in $textFields)\n        {\n            eval(\"asSelectFromTextField \"+$txField+\";\");\n            $selObjs =  ls(\"-sl\");\n            if(size($selObjs)>0)\n            {\n                $cmd = \"select -r\";\n                for($each in $selObjs)\n                    $cmd = $cmd+\" \"+$each;\n                $cmd = $cmd+\";\";\n                appendStringArray($cmds, {$cmd}, 1);\n                appendStringArray($cmds, {\"asChooseInput \"+$txField+\";\"}, 1);\n            }\n            select(\"-cl\");\n        }\n\n        string $allCmds = stringArrayToString($cmds, \"\\n\");\n        return $allCmds;\n    }\n\n    proc string asFacePreSetting_refreshButton_Cmd(string $scroll)\n    {\n        string $cmd = \"cmdScrollFieldExecuter(\\\"-edit\\\", \\\"-t\\\", advasFacePreSettingCmd(), \\\"\"+$scroll+\"\\\")\";\n        return $cmd;\n    }\n\n    string $advasFacePreSettingCmd_Window = window(\"-t\", \"AdvancedSkeleton Face Pre Setting Script\");\n        string $advasFacePreSettingCmd_form = formLayout(\"-nd\", 100);\n            string $advasFacePreSettingCmd_refreshButton = button(\"-l\", \"Refresh\");\n            string $advasFacePreSettingCmd_executeButton = button(\"-l\", \"Execute\");\n            string $advasFacePreSettingCmd_Scroll = cmdScrollFieldExecuter(\"-t\", advasFacePreSettingCmd());\n\n        formLayout -edit\n            -attachForm     $advasFacePreSettingCmd_Scroll         \"top\"    5\n            -attachForm     $advasFacePreSettingCmd_Scroll         \"left\"   5\n            -attachForm     $advasFacePreSettingCmd_Scroll         \"right\"  5\n            -attachControl  $advasFacePreSettingCmd_Scroll         \"bottom\" 5 $advasFacePreSettingCmd_refreshButton\n\n            -attachNone     $advasFacePreSettingCmd_refreshButton     \"top\"\n            -attachForm     $advasFacePreSettingCmd_refreshButton     \"left\"   5\n            -attachPosition $advasFacePreSettingCmd_refreshButton     \"right\"  5 50\n            -attachForm     $advasFacePreSettingCmd_refreshButton     \"bottom\" 5\n\n            -attachNone     $advasFacePreSettingCmd_executeButton   \"top\"\n            -attachPosition $advasFacePreSettingCmd_executeButton   \"left\"   5 50\n            -attachForm     $advasFacePreSettingCmd_executeButton   \"right\"  5\n            -attachForm     $advasFacePreSettingCmd_executeButton   \"bottom\" 5\n        $advasFacePreSettingCmd_form;\n\n        button(\"-edit\",\n            \"-c\", asFacePreSetting_refreshButton_Cmd($advasFacePreSettingCmd_Scroll),\n        $advasFacePreSettingCmd_refreshButton);\n\n        button(\"-edit\",\n            \"-c\", \"cmdScrollFieldExecuter(\\\"-edit\\\", \\\"-exc\\\", \\\"\"+$advasFacePreSettingCmd_Scroll+\"\\\")\",\n        $advasFacePreSettingCmd_executeButton);\n\n    showWindow;\n}\n" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Copies an already set AdvancedSkeleton Face Fit setting from an already bound Character." 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "Copy AdvancedSkeleton Face Fit Setting" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -imageOverlayLabel "FaceFit" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "BasicHead.png" 
        -image1 "BasicHead.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "// Copies an already set AdvancedSkeleton Face Fit setting from an already bound Character.\n{\nproc string copyAdvFaceFitEyeBallAttrs( string $obj )\n{\n    float $t[] = getAttr($obj+\".t\");\n    float $r[] = getAttr($obj+\".r\");\n    float $s[] = getAttr($obj+\".s\");\n\n    string $cmd = \"setAttr \"+$obj+\".t \"+string($t[0])+\" \"+string($t[1])+\" \"+string($t[2])+\";\\n\";\n    $cmd = $cmd + \"setAttr \"+$obj+\".rx \"+string($r[0])+\";\\n\";\n    $cmd = $cmd + \"setAttr \"+$obj+\".ry \"+string($r[1])+\";\\n\";\n    $cmd = $cmd + \"setAttr \"+$obj+\".s \"+string($s[0])+\" \"+string($s[1])+\" \"+string($s[2])+\";\\n\";\n\n    return $cmd;\n}\n\nproc string copyAdvFaceFitTongueAttrs( string $obj )\n{\n    float $t[] = getAttr($obj+\".t\");\n    float $r[] = getAttr($obj+\".r\");\n    float $s[] = getAttr($obj+\".s\");\n\n    string $cmd = \"setAttr \"+$obj+\".t \"+string($t[0])+\" \"+string($t[1])+\" \"+string($t[2])+\";\\n\";\n    $cmd = $cmd + \"setAttr \"+$obj+\".r \"+string($r[0])+\" \"+string($r[1])+\" \"+string($r[2])+\";\\n\";\n    $cmd = $cmd + \"setAttr \"+$obj+\".s \"+string($s[0])+\" \"+string($s[1])+\" \"+string($s[2])+\";\\n\";\n\n    return $cmd;\n}\n\nglobal proc string advasFaceFitSettingCmd()\n{\n    string $cmds[] = {\"// AdvancedSkeleton Face Fit Cmds.\\n\"};\n    string $cmd;\n\n    // EyeBall\n    appendStringArray($cmds, {\"\\nasCreateFaceFit EyeBall \\\"\\\" 0 0 1 \\\"\\\";\"}, 1);\n    appendStringArray($cmds, {copyAdvFaceFitEyeBallAttrs( \"FitEyeBall\" )}, 1);\n\n    string $selObjs[];\n    string $selectTxFields[] = {\"EyeLid \\\"Outer\\\";\",\n                                \"EyeLid \\\"Main\\\";\",\n                                \"EyeLid \\\"Inner\\\";\",\n                                \"Lip \\\"Outer\\\";\",\n                                \"Lip \\\"Main\\\";\",\n                                \"Lip \\\"Inner\\\";\",\n                                \"EyeBrowInner \\\"\\\";\",\n                                \"EyeBrowOuter \\\"\\\";\",\n                                \"EyeBrowCenter \\\"\\\";\",\n                                \"EyeBrowMid1 \\\"\\\";\",\n                                \"EyeBrowMid2 \\\"\\\";\",\n                                \"EyeBrowMid3 \\\"\\\";\",\n                                \"ForeHead \\\"\\\";\",\n                                \"JawPivot \\\"\\\";\",\n                                \"JawCorner \\\"\\\";\",\n                                \"Jaw \\\"\\\";\",\n                                \"Throat \\\"\\\";\",\n                                \"Cheek \\\"\\\";\",\n                                \"CheekBone \\\"\\\";\",\n                                \"CheekRaiser \\\"\\\";\",\n                                \"SmileBulge \\\"\\\";\",\n                                \"FrownBulge \\\"\\\";\",\n                                \"Nose \\\"\\\";\",\n                                \"NoseUnder \\\"\\\";\",\n                                \"NoseCorner \\\"\\\";\",\n                                \"NoseSide \\\"\\\";\",\n                                \"NoseCenter \\\"\\\";\",\n                                \"Nostril \\\"\\\";\",\n                                \"Pupil \\\"\\\";\",\n                                \"Iris \\\"\\\";\",\n                                \"SmileLine \\\"\\\";\"};\n\n    string $createTxFields[] = {\"EyeLid \\\"Outer\\\" 1 1 0 \\\"\\\";\",\n                                \"EyeLid \\\"Main\\\" 1 1 0 \\\"\\\";\",\n                                \"EyeLid \\\"Inner\\\" 1 1 0 \\\"\\\";\",\n                                \"Lip \\\"Outer\\\" 1 1 0 \\\"\\\";\",\n                                \"Lip \\\"Main\\\" 1 1 0 \\\"\\\";\",\n                                \"Lip \\\"Inner\\\" 1 1 0 \\\"\\\";\",\n                                \"EyeBrowInner \\\"\\\" 0 0 1 \\\"asGreenSG\\\";\",\n                                \"EyeBrowOuter \\\"\\\" 0 0 1 \\\"asRedSG\\\";\",\n                                \"EyeBrowCenter \\\"\\\" 0 0 1 \\\"asBlueSG\\\";\",\n                                \"EyeBrowMid1 \\\"\\\" 0 0 1 \\\"asRedSG\\\";\",\n                                \"EyeBrowMid2 \\\"\\\" 0 0 1 \\\"asRedSG\\\";\",\n                                \"EyeBrowMid3 \\\"\\\" 0 0 1 \\\"asRedSG\\\";\",\n                                \"ForeHead \\\"\\\" 0 0 0 \\\"\\\";\",\n                                \"JawPivot \\\"\\\" 0 0 1 \\\"asBlue2SG\\\";\",\n                                \"JawCorner \\\"\\\" 0 0 1 \\\"asBlue2SG\\\";\",\n                                \"Jaw \\\"\\\" 0 0 1 \\\"asBlue2SG\\\";\",\n                                \"Throat \\\"\\\" 0 0 1 \\\"asBlue2SG\\\";\",\n                                \"Cheek \\\"\\\" 0 0 1 \\\"asGreenSG\\\";\",\n                                \"CheekBone \\\"\\\" 0 0 1 \\\"asBlue2SG\\\";\",\n                                \"CheekRaiser \\\"\\\" 0 0 1 \\\"asRedSG\\\";\",\n                                \"SmileBulge \\\"\\\" 0 0 1 \\\"asBlueSG\\\";\",\n                                \"FrownBulge \\\"\\\" 0 0 1 \\\"asBlueSG\\\";\",\n                                \"Nose \\\"\\\" 0 0 1 \\\"asGreenSG\\\";\",\n                                \"NoseUnder \\\"\\\" 0 0 1 \\\"asBlueSG\\\";\",\n                                \"NoseCorner \\\"\\\" 0 0 1 \\\"asRedSG\\\";\",\n                                \"NoseSide \\\"\\\" 0 0 1 \\\"asBlueSG\\\";\",\n                                \"NoseCenter \\\"\\\" 0 0 1 \\\"asBlueSG\\\";\",\n                                \"Nostril \\\"\\\" 0 0 1 \\\"asBlueSG\\\";\",\n                                \"Pupil \\\"\\\" 0 0 0 \\\"asRedSG\\\";\",\n                                \"Iris \\\"\\\" 0 0 0 \\\"asGreenSG\\\";\",\n                                \"SmileLine \\\"\\\" 0 0 0 \\\"asRedSG\\\";\"};\n\n    int $s = size($selectTxFields);\n    for($i=0;$i<$s;$i++)\n    {\n        eval(\"asFaceFitReSelect \"+$selectTxFields[$i]);\n        $selObjs = ls(\"-sl\");\n        if(size($selObjs)>0)\n        {\n            $cmd = \"select -r\";\n            for($each in $selObjs)\n                $cmd = $cmd+\" \"+$each;\n            $cmd = $cmd+\";\";\n            appendStringArray($cmds, {$cmd}, 1);\n            appendStringArray($cmds, {\"asCreateFaceFit \"+$createTxFields[$i]}, 1);\n        }\n        select(\"-cl\");\n    }\n\n    // Tongue\n    appendStringArray($cmds, {\"\\nasCreateFaceFit Tongue \\\"\\\" 0 0 0 \\\"asBlueSG\\\";\"}, 1);\n    appendStringArray($cmds, {copyAdvFaceFitEyeBallAttrs( \"Tongue0\" )}, 1);\n    appendStringArray($cmds, {copyAdvFaceFitEyeBallAttrs( \"Tongue1\" )}, 1);\n    appendStringArray($cmds, {copyAdvFaceFitEyeBallAttrs( \"Tongue2\" )}, 1);\n    appendStringArray($cmds, {copyAdvFaceFitEyeBallAttrs( \"Tongue3\" )}, 1);\n    appendStringArray($cmds, {copyAdvFaceFitEyeBallAttrs( \"Tongue4\" )}, 1);\n\n    appendStringArray($cmds, {\"\\nasCreateFaceFit UpMidLo \\\"\\\" 0 0 0 \\\"asGreenSG\\\";\"}, 1);\n\n    string $allCmds = stringArrayToString($cmds, \"\\n\");\n    return $allCmds;\n}\n\nproc string asFaceFitSetting_refreshButton_Cmd(string $scroll)\n{\n    string $cmd = \"cmdScrollFieldExecuter(\\\"-edit\\\", \\\"-t\\\", advasFaceFitSettingCmd(), \\\"\"+$scroll+\"\\\")\";\n    return $cmd;\n}\n\nstring $advasFaceFitSettingCmd_Window = window(\"-t\", \"AdvancedSkeleton Face Fit Setting Script\");\n    string $advasFaceFitSettingCmd_form = formLayout(\"-nd\", 100);\n        string $advasFaceFitSettingCmd_refreshButton = button(\"-l\", \"Refresh\");\n        string $advasFaceFitSettingCmd_executeButton = button(\"-l\", \"Execute\");\n        string $advasFaceFitSettingCmd_Scroll = cmdScrollFieldExecuter(\"-t\", advasFaceFitSettingCmd());\n\n    formLayout -edit\n        -attachForm     $advasFaceFitSettingCmd_Scroll         \"top\"    5\n        -attachForm     $advasFaceFitSettingCmd_Scroll         \"left\"   5\n        -attachForm     $advasFaceFitSettingCmd_Scroll         \"right\"  5\n        -attachControl  $advasFaceFitSettingCmd_Scroll         \"bottom\" 5 $advasFaceFitSettingCmd_refreshButton\n\n        -attachNone     $advasFaceFitSettingCmd_refreshButton     \"top\"\n        -attachForm     $advasFaceFitSettingCmd_refreshButton     \"left\"   5\n        -attachPosition $advasFaceFitSettingCmd_refreshButton     \"right\"  5 50\n        -attachForm     $advasFaceFitSettingCmd_refreshButton     \"bottom\" 5\n\n        -attachNone     $advasFaceFitSettingCmd_executeButton   \"top\"\n        -attachPosition $advasFaceFitSettingCmd_executeButton   \"left\"   5 50\n        -attachForm     $advasFaceFitSettingCmd_executeButton   \"right\"  5\n        -attachForm     $advasFaceFitSettingCmd_executeButton   \"bottom\" 5\n    $advasFaceFitSettingCmd_form;\n\n    button(\"-edit\",\n        \"-c\", asFaceFitSetting_refreshButton_Cmd($advasFaceFitSettingCmd_Scroll),\n    $advasFaceFitSettingCmd_refreshButton);\n\n    button(\"-edit\",\n        \"-c\", \"cmdScrollFieldExecuter(\\\"-edit\\\", \\\"-exc\\\", \\\"\"+$advasFaceFitSettingCmd_Scroll+\"\\\")\",\n    $advasFaceFitSettingCmd_executeButton);\n\nshowWindow;\n}\n" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 64
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Locks the weight of the joints outside the Genesis 8 character's head joint." 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "Locks the weight of the joints outside the G8  head" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -imageOverlayLabel "LWOH" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "polyNormalLock.png" 
        -image1 "polyNormalLock.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "// Locks the weight of the Genesis 8 character joints outside the Genesis 8 character's head joint.\n{\n    string $lockWeightsInfs[] = {\"head\",\"neckUpper\", \"hip\", \"abdomenLower\", \"abdomenUpper\",\n        \"chestLower\", \"chestUpper\", \"lCollar\", \"lShldrBend\", \"lShldrTwist\", \"lForearmBend\",\n        \"lForearmTwist\", \"lHand\", \"lCarpal1\", \"lIndex1\", \"lIndex2\", \"lIndex3\", \"lCarpal2\",\n        \"lMid1\", \"lMid2\", \"lMid3\", \"lCarpal3\", \"lRing1\", \"lRing2\", \"lRing3\", \"lCarpal4\",\n        \"lPinky1\", \"lPinky2\", \"lPinky3\", \"lThumb1\", \"lThumb2\", \"lThumb3\",\"neckLower\",\n        \"rCollar\", \"rShldrBend\", \"rShldrTwist\", \"rForearmBend\", \"rForearmTwist\", \"rHand\",\n        \"rCarpal1\", \"rIndex1\", \"rIndex2\", \"rIndex3\", \"rCarpal2\", \"rMid1\", \"rMid2\", \"rMid3\",\n        \"rCarpal3\", \"rRing1\", \"rRing2\", \"rRing3\", \"rCarpal4\", \"rPinky1\", \"rPinky2\", \"rPinky3\",\n        \"rThumb1\", \"rThumb2\", \"rThumb3\", \"lPectoral\", \"rPectoral\", \"pelvis\", \"lThighBend\",\n        \"lThighTwist\", \"lShin\", \"lFoot\", \"lMetatarsals\", \"lToe\", \"lBigToe\", \"lBigToe_2\",\n        \"lSmallToe1\", \"lSmallToe1_2\", \"lSmallToe2\", \"lSmallToe2_2\", \"lSmallToe3\", \"lSmallToe3_2\",\n        \"lSmallToe4\", \"lSmallToe4_2\", \"rThighBend\", \"rThighTwist\", \"rShin\", \"rFoot\", \"rMetatarsals\",\n        \"rToe\", \"rBigToe\", \"rBigToe_2\", \"rSmallToe1\", \"rSmallToe1_2\", \"rSmallToe2\", \"rSmallToe2_2\",\n        \"rSmallToe3\", \"rSmallToe3_2\", \"rSmallToe4\", \"rSmallToe4_2\", \"lEar\", \"rEar\"};\n\n    for( $each in $lockWeightsInfs )\n        setAttr(($each+\".liw\"), 1);\n}" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "This is a custom command to imported facial animations from AdvancedSkeleton controllers.\nModified from the Imported Face animation command of the AdvancedSkeleton tool." 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "Import AS facial Test animations" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -imageOverlayLabel "ImFaAn" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "puppetFind.png" 
        -image1 "puppetFind.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "// This is a custom command to imported facial animations from AdvancedSkeleton controllers.\n// Modified from the Imported Face animation command of the AdvancedSkeleton tool.\n{\nstring $ctrl,$attr;\nstring $nameSpace=\"\";\nstring $tempString[],$tempString2[],$animCurves[];\nstring $asMotionFaceFile=`asGetScriptLocation`+\"/AdvancedSkeleton5Files/div/asMotionFace.ma\";\n\nif (!`objExists ($nameSpace+\"FaceControlSet\")`)\n\terror \"No controlSets detected. select a controller\";\n\nif (`objExists animationTestFaceFromMoCapLibrary`)\n\t{\n\t$nameSpace=`getAttr animationTestFaceFromMoCapLibrary.nameSpace`;\n\tdelete animationTestFaceFromMoCapLibrary;\n\t}\nfile -r -ignoreVersion -gl -mergeNamespacesOnClash false -namespace \"MotionCaptureLibraryFace\" -options \"v=0;\" $asMotionFaceFile;\n\n$animCurves=`ls -type animCurve \"MotionCaptureLibraryFace:*\"`;\nfor ($i=0;$i<size($animCurves);$i++)\n\t{\n\t//remove old copies, if exists\n\t$tempString[0]=`substitute \"MotionCaptureLibraryFace:\" $animCurves[$i] \"\"`;\n\t$tempString=`ls ($tempString[0]+\"*\")`;\n\tif (size($tempString))\n\t\tdelete $tempString;\n\n\t$tempString=`duplicate $animCurves[$i]`;\n\ttokenize $tempString[0] \"_\" $tempString2;\n\t$ctrl=$nameSpace+$tempString2[0]+\"_\"+$tempString2[1];\n\t$attr=$tempString2[2];\n\tif (!`attributeExists $attr $ctrl`)\n\t\t{\n\t\tprint (\"//Not found:\"+$ctrl+\".\"+$attr+\"\\n\");\n\t\tcontinue;\n\t\t}\n\t catchQuiet (`connectAttr ($tempString[0]+\".output\") ($ctrl+\".\"+$attr)`);\n\t}\nfile -rr $asMotionFaceFile;\nplaybackOptions -min 0 -ast 0 -max 330 -aet 330;\ncurrentTime 70;\nprint \"// Test animation applied.\\n\";\n}\n" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "This is a custom command to remove facial animations from AdvancedSkeleton controllers. Modified from the Remove Face animation command of the AdvancedSkeleton tool." 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "remove AS facial Test animations" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -imageOverlayLabel "ReFaAn" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "puppetRemove.png" 
        -image1 "puppetRemove.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "// This is a custom command to remove facial animations from AdvancedSkeleton controllers.\n// Modified from the Remove Face animation command of the AdvancedSkeleton tool.\n{\nstring $nameSpace=\"\";\nstring $refFiles[]=`file -q -r`;\nstring $sel[]=`ls -sl`;\nstring $tempString[],$tempString2[];\n\nif (!`objExists ($nameSpace+\"FaceControlSet\")`)\n\terror \"No controlSets detected. select a controller\";\n\nselect -cl;\nif (`objExists ($nameSpace+\"FaceControlSet\")`) select -add `sets -q ($nameSpace+\"FaceControlSet\")`;\nif (`objExists ($nameSpace+\"FKHead_M\")`) select -add ($nameSpace+\"FKHead_M\");\nif (`objExists ($nameSpace+\"FKNeck_M\")`) select -add ($nameSpace+\"FKNeck_M\");\n\nstring $animCurves[]=`listConnections -type animCurve -s 1 -d 0`;\nif (size($animCurves))\n\tdelete $animCurves;\n\nif (`objExists ($nameSpace+\"ControlSet\")`) asGoToBuildPoseOptions $nameSpace \"ControlSet\";\nif (`objExists ($nameSpace+\"FaceControlSet\")`) asGoToBuildPoseOptions $nameSpace \"FaceControlSet\";\n\ndgdirty -a;\ncatchQuiet (`select $sel`);\nprint (\"// Face Test animations removed.\\n\");\n}\n" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Select Vertexs those are influenced by selected influences.\n Select Influences & Skin Object run this script." 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "Select Vertexs those are influenced by selected influences" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -imageOverlayLabel "VtxInf" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "showInfluence.png" 
        -image1 "showInfluence.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "// Select Vertexs those influences by selected influences.\n// Select Influences & Skin Object run this script.\n{\n  // List Mesh Upstream Geometry Nodes.\n  proc string[] listUpstream(string $startNode, string $passedNodes[], int $depth, int $maxDepth)\n  {\n      string $plugs[];\n      if(nodeType($startNode) == \"mesh\")\n      {\n          $plugs[0] = $startNode+\".inMesh\";\n      }\n      else\n      {\n          string $plugName[] = listAttr(\"-a\", \"-m\", \"-st\", \"*inputGeometry*\", $startNode);\n          int $s = size($plugName);\n          for($i=0; $i<$s; $i++)\n          {\n              $plugs[$i] = $startNode+\".\"+$plugName[$i];\n          }\n      }\n\n      $sour = stringArrayRemove($passedNodes, stringArrayRemoveDuplicates(listConnections(\"-s\", 1, \"-d\", 0, \"-scn\", 1, \"-sh\", 1, $plugs)));\n      if( size($sour) > 0 )\n      {\n          $passedNodes = stringArrayCatenate($passedNodes, $sour);\n          if( $depth < $maxDepth )\n          {\n              for( $each in $sour )\n              {\n                  $passedNodes = listUpstream($each,$passedNodes,($depth+1),$maxDepth);\n              }\n          }\n      }\n      return $passedNodes;\n  }\n\n  string $selObjs[] = ls(\"-sl\");\n  string $mesh[] = listRelatives(\"-s\", \"-typ\", \"mesh\", $selObjs);\n\n  string $immesh[];\n  for( $each in $mesh )\n    if( getAttr($each+\".intermediateObject\") )\n      $immesh[size($immesh)] = $each;\n  $mesh = stringArrayRemove($immesh, $mesh);\n\n  string $upstreamNodes[] = listUpstream($mesh[0], {$mesh[0]}, 0, 20);\n  string $skinCluster[] = ls(\"-typ\", \"skinCluster\", $upstreamNodes);\n\n  string $allInfs[]= skinCluster(\"-q\", \"-inf\", $skinCluster[0]);\n  string $infs[];\n\n  for( $each in $selObjs )\n    if( stringArrayContains($each, $allInfs) )\n      $infs[size($infs)] = $each;\n\n  ConvertSelectionToVertices();\n  string $allVtx[] = ls(\"-sl\", \"-fl\");\n  select(\"-cl\");\n  string $infVtxs[];\n  for( $inf in $infs )\n  {\n    for( $vtx in $allVtx)\n    {\n      if( skinPercent( \"-t\", $inf, \"-q\", $skinCluster[0], $vtx) > 0 )\n        $infVtxs[size($infVtxs)] = $vtx;\n    }\n    $allVtx = stringArrayRemove($infVtxs, $allVtx);\n  }\n  $infVtxs = stringArrayRemoveDuplicates($infVtxs);\n  select($infVtxs);\n}\n" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Select influences those influences selected Vertexs.\nSelect Skin Vertexs run this script." 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "Select influences those influences selected Vertexs" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -imageOverlayLabel "InfVtx" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "showInfluence.png" 
        -image1 "showInfluence.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "// Select influences those influences selected Vertexs.\n// Select Skin Vertexs run this script.\n{\n  string $selVtxs[] = ls(\"-sl\", \"-fl\");\n  string $buffer[];\n  tokenize($selVtxs[0], \".\", $buffer);\n  string $mesh[] = listRelatives(\"-s\", \"-typ\", \"mesh\", $buffer[0]);\n\n  string $upstreamNodes[] = dazas_listUpstream($mesh[0], {$mesh[0]}, 0, 20);\n  string $skinCluster[] = ls(\"-typ\", \"skinCluster\", $upstreamNodes);\n\n  string $allInfs[]= skinCluster(\"-q\", \"-inf\", $skinCluster[0]);\n\n  select(\"-cl\");\n  string $infs[];\n  for($vtx in $selVtxs)\n  {\n    for($inf in $allInfs)\n    {\n      if( skinPercent( \"-t\", $inf, \"-q\", $skinCluster[0], $vtx) > 0 )\n        $infs[size($infs)] = $inf;\n    }\n  }\n  $infs = stringArrayRemoveDuplicates($infs);\n  print $infs;\n  select($infs);\n}\n" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Check the weight of Genesis 8 character head vertices that are influenced by joints other than the head. Select Genesis 8 character skin mesh and run this script." 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "Check Gen8  head vertexs weights" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -imageOverlayLabel "CHW" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "selectSurfaceBorder.png" 
        -image1 "selectSurfaceBorder.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "// Check the weight of Genesis 8 character head vertices that are influenced by joints other than the head.\n// Select Genesis 8 character skin mesh and run this script.\ndazas_correctGen8HeadWeights(\"check\",{},{},\"\");" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Check & Hammer the weight of Genesis 8 character head vertices that are influenced by joints other than the head. Select Genesis 8 character skin mesh and run this script." 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "Check & Hammer Gen8  head vertexs weights" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -imageOverlayLabel "HHW" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "weightHammer.png" 
        -image1 "weightHammer.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "// Check & Hammer the weight of Genesis 8 character head vertices that are influenced by joints other than the head.\n// Select Genesis 8 character skin mesh and run this script.\ndazas_correctGen8HeadWeights(\"\",{},{},\"\");" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Check & Move the weight of Genesis 8 character head vertices that are influenced by joints other than the head to the specified influence. Select Genesis 8 character skin mesh and run this script." 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "Check & Move Gen8 head vertexs weights" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -imageOverlayLabel "MHW" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "moveVertexWeights.png" 
        -image1 "moveVertexWeights.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "// Check & Move the weight of Genesis 8 character head vertices that are influenced by joints other than the head to the specified influence.\n// Select Genesis 8 character skin mesh and run this script.\ndazas_correctGen8HeadWeights(\"move\",{},{},\"\");" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "// Select the vertices that should not be affected by the 'neckLower' skeleton and use the hammer.\n// Select Skin Object run this script." 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "Hammer the vertices that should not be affected by the neck" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -imageOverlayLabel "HNW" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "weightHammer.png" 
        -image1 "weightHammer.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "// Select the vertices that should not be affected by the 'neckLower' skeleton and use the hammer.\n// Select Skin Object run this script.\n{\n  string $neckLowerVtxs[] = {\n      \"vtx[26]\", \"vtx[27]\", \"vtx[40]\", \"vtx[50]\", \"vtx[56]\", \"vtx[57]\", \"vtx[58]\", \"vtx[73]\", \"vtx[74]\", \"vtx[93]\", \"vtx[108]\", \"vtx[119]\", \"vtx[125]\", \"vtx[126]\", \"vtx[127]\",\n      \"vtx[553]\", \"vtx[822]\", \"vtx[823]\", \"vtx[1602]\", \"vtx[1785]\", \"vtx[1786]\", \"vtx[1787]\", \"vtx[1790]\", \"vtx[1791]\", \"vtx[2019]\", \"vtx[2020]\", \"vtx[2021]\", \"vtx[2030]\", \"vtx[2031]\", \"vtx[2032]\",\n      \"vtx[2033]\", \"vtx[2034]\", \"vtx[2130]\", \"vtx[2131]\", \"vtx[2143]\", \"vtx[2144]\", \"vtx[2145]\", \"vtx[2146]\", \"vtx[2147]\", \"vtx[2148]\", \"vtx[2154]\", \"vtx[2155]\", \"vtx[2156]\", \"vtx[2157]\", \"vtx[2158]\",\n      \"vtx[2162]\", \"vtx[2163]\", \"vtx[2164]\", \"vtx[2165]\", \"vtx[2166]\", \"vtx[2167]\", \"vtx[2382]\", \"vtx[2383]\", \"vtx[2384]\", \"vtx[2385]\", \"vtx[2386]\", \"vtx[2387]\", \"vtx[2388]\", \"vtx[2389]\", \"vtx[2390]\",\n      \"vtx[2391]\", \"vtx[2392]\", \"vtx[2393]\", \"vtx[2394]\", \"vtx[2395]\", \"vtx[2396]\", \"vtx[2397]\", \"vtx[2456]\", \"vtx[2485]\", \"vtx[2486]\", \"vtx[2487]\", \"vtx[2488]\", \"vtx[2529]\", \"vtx[2530]\", \"vtx[2531]\",\n      \"vtx[2532]\", \"vtx[2533]\", \"vtx[2534]\", \"vtx[2535]\", \"vtx[2536]\", \"vtx[2537]\", \"vtx[2538]\", \"vtx[2539]\", \"vtx[2540]\", \"vtx[2541]\", \"vtx[2542]\", \"vtx[2543]\", \"vtx[2544]\", \"vtx[2545]\", \"vtx[2546]\",\n      \"vtx[2547]\", \"vtx[2548]\", \"vtx[2549]\", \"vtx[2553]\", \"vtx[2554]\", \"vtx[2555]\", \"vtx[2556]\", \"vtx[2557]\", \"vtx[2558]\", \"vtx[2601]\", \"vtx[2602]\", \"vtx[2605]\", \"vtx[2669]\", \"vtx[2714]\", \"vtx[2715]\",\n      \"vtx[2888]\", \"vtx[2890]\", \"vtx[2891]\", \"vtx[2892]\", \"vtx[2893]\", \"vtx[2894]\", \"vtx[2895]\", \"vtx[2902]\", \"vtx[2903]\", \"vtx[2904]\", \"vtx[2905]\", \"vtx[2906]\", \"vtx[2907]\", \"vtx[2908]\", \"vtx[2909]\",\n      \"vtx[2910]\", \"vtx[2911]\", \"vtx[2912]\", \"vtx[2913]\", \"vtx[2914]\", \"vtx[2915]\", \"vtx[2916]\", \"vtx[2917]\", \"vtx[2918]\", \"vtx[2919]\", \"vtx[2920]\", \"vtx[2921]\", \"vtx[2922]\", \"vtx[2923]\", \"vtx[2924]\",\n      \"vtx[2925]\", \"vtx[2926]\", \"vtx[2927]\", \"vtx[2928]\", \"vtx[2929]\", \"vtx[2930]\", \"vtx[2931]\", \"vtx[2932]\", \"vtx[2933]\", \"vtx[2934]\", \"vtx[2935]\", \"vtx[2936]\", \"vtx[2937]\", \"vtx[3509]\", \"vtx[3510]\",\n      \"vtx[3511]\", \"vtx[3512]\", \"vtx[3513]\", \"vtx[3514]\", \"vtx[3724]\", \"vtx[4005]\", \"vtx[4006]\", \"vtx[4007]\", \"vtx[4008]\", \"vtx[4009]\", \"vtx[4011]\", \"vtx[4246]\", \"vtx[4247]\", \"vtx[4248]\", \"vtx[4372]\",\n      \"vtx[4553]\", \"vtx[4554]\", \"vtx[6294]\", \"vtx[6305]\", \"vtx[6311]\", \"vtx[6312]\", \"vtx[6313]\", \"vtx[6739]\", \"vtx[7008]\", \"vtx[7009]\", \"vtx[7788]\", \"vtx[7971]\", \"vtx[7972]\", \"vtx[7973]\", \"vtx[7976]\",\n      \"vtx[7977]\", \"vtx[8205]\", \"vtx[8206]\", \"vtx[8207]\", \"vtx[8216]\", \"vtx[8217]\", \"vtx[8218]\", \"vtx[8219]\", \"vtx[8220]\", \"vtx[8316]\", \"vtx[8317]\", \"vtx[8329]\", \"vtx[8330]\", \"vtx[8331]\", \"vtx[8332]\",\n      \"vtx[8333]\", \"vtx[8334]\", \"vtx[8340]\", \"vtx[8341]\", \"vtx[8342]\", \"vtx[8343]\", \"vtx[8344]\", \"vtx[8348]\", \"vtx[8349]\", \"vtx[8350]\", \"vtx[8351]\", \"vtx[8352]\", \"vtx[8353]\", \"vtx[8568]\", \"vtx[8569]\",\n      \"vtx[8570]\", \"vtx[8571]\", \"vtx[8572]\", \"vtx[8573]\", \"vtx[8574]\", \"vtx[8575]\", \"vtx[8576]\", \"vtx[8577]\", \"vtx[8578]\", \"vtx[8579]\", \"vtx[8580]\", \"vtx[8581]\", \"vtx[8582]\", \"vtx[8583]\", \"vtx[8642]\",\n      \"vtx[8671]\", \"vtx[8672]\", \"vtx[8673]\", \"vtx[8674]\", \"vtx[8715]\", \"vtx[8716]\", \"vtx[8717]\", \"vtx[8718]\", \"vtx[8719]\", \"vtx[8720]\", \"vtx[8721]\", \"vtx[8722]\", \"vtx[8723]\", \"vtx[8724]\", \"vtx[8725]\",\n      \"vtx[8726]\", \"vtx[8727]\", \"vtx[8728]\", \"vtx[8729]\", \"vtx[8730]\", \"vtx[8731]\", \"vtx[8732]\", \"vtx[8733]\", \"vtx[8734]\", \"vtx[8735]\", \"vtx[8739]\", \"vtx[8740]\", \"vtx[8741]\", \"vtx[8742]\", \"vtx[8743]\",\n      \"vtx[8744]\", \"vtx[8787]\", \"vtx[8788]\", \"vtx[8791]\", \"vtx[8855]\", \"vtx[8900]\", \"vtx[8901]\", \"vtx[9074]\", \"vtx[9076]\", \"vtx[9077]\", \"vtx[9078]\", \"vtx[9079]\", \"vtx[9080]\", \"vtx[9081]\", \"vtx[9088]\",\n      \"vtx[9089]\", \"vtx[9090]\", \"vtx[9091]\", \"vtx[9092]\", \"vtx[9093]\", \"vtx[9094]\", \"vtx[9095]\", \"vtx[9096]\", \"vtx[9097]\", \"vtx[9098]\", \"vtx[9099]\", \"vtx[9100]\", \"vtx[9101]\", \"vtx[9102]\", \"vtx[9103]\",\n      \"vtx[9104]\", \"vtx[9105]\", \"vtx[9106]\", \"vtx[9107]\", \"vtx[9108]\", \"vtx[9109]\", \"vtx[9110]\", \"vtx[9111]\", \"vtx[9112]\", \"vtx[9113]\", \"vtx[9114]\", \"vtx[9115]\", \"vtx[9116]\", \"vtx[9117]\", \"vtx[9118]\",\n      \"vtx[9119]\", \"vtx[9120]\", \"vtx[9672]\", \"vtx[9673]\", \"vtx[9674]\", \"vtx[9675]\", \"vtx[9676]\", \"vtx[9677]\", \"vtx[9886]\", \"vtx[10164]\", \"vtx[10165]\", \"vtx[10166]\", \"vtx[10167]\", \"vtx[10168]\", \"vtx[10170]\",\n      \"vtx[10403]\", \"vtx[10404]\", \"vtx[10521]\", \"vtx[10700]\", \"vtx[10701]\"};\n\n  string $mesh[] = listRelatives(\"-s\", \"-typ\", \"mesh\", ls(\"-sl\"));\n\n  string $immesh[];\n  for( $each in $mesh )\n    if( getAttr($each+\".intermediateObject\") )\n      $immesh[size($immesh)] = $each;\n  $mesh = stringArrayRemove($immesh, $mesh);\n\n  string $meshTrans[] = listRelatives(\"-p\", $mesh[0]);\n  int $s = size($neckLowerVtxs);\n  for($i=0; $i<$s; $i++)\n    $neckLowerVtxs[$i] = ($meshTrans[0]+\".\"+$neckLowerVtxs[$i]);\n\n  string $upstreamNodes[] = dazas_listUpstream($mesh[0], {$mesh[0]}, 0, 20);\n  string $skinCluster[] = ls(\"-typ\", \"skinCluster\", $upstreamNodes);\n\n  ConvertSelectionToVertices();\n  string $allVtx[] = ls(\"-sl\", \"-fl\");\n  select(\"-cl\");\n  string $infVtxs[];\n\n  string $inf = \"neckLower\";\n  for( $vtx in $allVtx)\n  {\n    if( skinPercent( \"-t\", $inf, \"-q\", $skinCluster[0], $vtx) > 0 )\n      $infVtxs[size($infVtxs)] = $vtx;\n  }\n\n  $infVtxs = stringArrayRemoveDuplicates($infVtxs);\n  $infVtxs = stringArrayRemove($neckLowerVtxs, $infVtxs);\n  select($infVtxs);\n  weightHammerVerts();\n}\n" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 64
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Set Genesis 8 Character From Bind Pose to T-Pose. Go to Bind Pose then run this script." 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "Set Genesis 8 Character From Bind Pose to T-Pose" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -imageOverlayLabel "T-Pose" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "goToBindPose.png" 
        -image1 "goToBindPose.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "//Set Genesis 8 Character From Bind Pose to T-Pose.\n\nsetAttr \"lShldrBend.rotateZ\" 45;\nsetAttr \"rShldrBend.rotateZ\" -45;\n\nsetAttr \"lCollar.rotateZ\" 2.5;\nsetAttr \"rCollar.rotateZ\" -2.5;\n\nsetAttr \"lThighBend.rotateZ\" -15;\nsetAttr \"rThighBend.rotateZ\" 15;\n\nsetAttr \"lThighTwist.rotateY\" -10;\nsetAttr \"rThighTwist.rotateY\" 10;\n\nsetAttr \"lFoot.rotateY\" -8.5;\nsetAttr \"rFoot.rotateY\" 8.5;\n\nsetAttr \"lFoot.rotateZ\" 20;\nsetAttr \"rFoot.rotateZ\" -20;" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Balance the skin weights on the left and right sides." 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "Balance Skin Weights" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -imageOverlayLabel "BaSW" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "hairPaintBaldness.png" 
        -image1 "hairPaintBaldness.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "dazas_balanceSkinWeights(\n    {}, // Vertices\n    {}, // Influences\n    \"rel\", // 'Relative','rel' or 'Absolutely','abs' or 'Distance','dis'\n    \"use\", // 'use', 'directlyUse' or 'build'\n    0.0,  // Balance Value\n    1.5, // Max Distance\n    1.0, // Exponential of Attenuation\n    0.1, // Below this value will be ignored\n    1); // Open UI" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -flexibleWidthType 3
        -flexibleWidthValue 32
        -enable 1
        -width 35
        -height 34
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Blend the two sets of skin weights of the vertices according to the given percentage." 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "Blend Skin Weights" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -imageOverlayLabel "BlSW" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "swapBlendShape.png" 
        -image1 "swapBlendShape.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "dazas_blendSkinWeights(\n    {}, // Vertices\n    \"b\", // 'RecordA','ra', 'RecordB','rb', or 'Blend','b'\n    0.5, // Blend Value\n\t0, // Do not echo skinPercent commands.\n    1); // open UI" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;

} 
